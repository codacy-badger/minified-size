#!/usr/bin/env node

'use strict'

const commander = require('commander')
const minifiedSize = require('..')
const prettyBytes = require('pretty-bytes')
const pkg = require('../package.json')

commander.version(pkg.version)
  .description(pkg.description)
  .usage('[options] <file>, ...')
  .option('-j, --json', 'write results in the JSON format')
  .option('-r, --raw-size', 'write sizes in bytes as integers')

commander.on('--help', () => {
  console.log('  Examples:')
  console.log()
  console.log('    $ minified-size lib/index.js')
  console.log('    $ minified-size --json lib/index.js')
})

commander.parse(process.argv)
const files = commander.args
if (!files.length) {
  commander.help()
}

const { json, rawSize } = commander

function printError (file, { message, line, column }) {
  if (line) {
    console.log(`${file}:${line}:${column}: ${message}`)
  } else {
    console.log(`${file}: ${message}`)
  }
}

function printResult ({ error, file, minifiedSize }) {
  if (error) {
    printError(file, error)
  } else {
    if (!rawSize) {
      minifiedSize = prettyBytes(minifiedSize)
    }
    console.log(`${file}: ${minifiedSize}`)
  }
}

(async () => {
  const results = await minifiedSize({ files })
  if (json) {
    console.log(results)
  } else  {
    results.forEach(printResult)
  }
})()
